/*
 * Copyright 2016 Layne Mobile, LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion rxsCompileSdkVersion as int
    buildToolsVersion rxsBuildToolsVersion

    defaultConfig {
        minSdkVersion rxsMinSdkVersion as int
        targetSdkVersion rxsTargetSdkVersion as int
        versionCode VERSION_CODE as int
        versionName VERSION_NAME
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }
}

dependencies {
    compile "io.reactivex:rxandroid:${rxsRxAndroidVersion}"
    compile "io.reactivex:rxjava:${rxsRxJavaVersion}"

    // testing
    testCompile "junit:junit:${rxsJunitVersion}"
    testCompile "org.mockito:mockito-core:${rxsMockitoVersion}"
    testCompile "org.robolectric:robolectric:${rxsRoboelectricVersion}"
}

// This is the library version used when deploying the artifact
version = VERSION_NAME
def siteUrl = 'https://github.com/LayneMobile/RxSubscriptions'      // Homepage URL of the library
def gitUrl = 'https://github.com/LayneMobile/RxSubscriptions.git'   // Git repository URL
group = 'com.laynemobile'

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'Rx subscription management for Android'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'laynepenney'
                        name 'Layne Penney'
                        email 'layne@laynemobile.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    encoding = 'UTF-8'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(rootProject.file('bintray.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'RxSubscriptions'
        userOrg = 'laynemobile'
        desc = 'Rx subscription management for Android'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
        //Optional version descriptor
        version {
            //Optional version-level attributes
            //Optional configuration for GPG signing
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.password") //Optional. The passphrase for GPG signing'
            }
        }
    }
}
